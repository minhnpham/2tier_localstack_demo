---
# tasks file for roles/webapp

- name: START Role webapp
  debug:
    msg: "START execution of role/webapp"

- name: Install NodeJS and build tools
  yum:
    name: "{{ packages }}"
    state: "installed"
    update_cache: "yes"
  vars:
    packages:
    - epel-release
    - gcc
    - gcc-c++
    - make
    - git
    - nodejs

- name: Install Angular CLI
  npm:
    name: "@angular/cli@1.7.4"
    global: yes
    state: present

- name: Clean any previous src checkouts
  file:
    path: "{{ webapp_paths.src_checkout_dir }}"
    state: absent

- name: Create webapp source code dir
  file:
    path: "{{ webapp_paths.src_checkout_dir }}"
    state: directory
    mode: 0755

- name: Checkout webapp source code
  git:
    repo: "{{ webapp_src_repo }}"
    dest: "{{ webapp_paths.src_checkout_dir }}"

# PROCESS webapp configuration templates
- name: Process webapp config templates
  template:
    src: database.js.j2
    dest: "{{ webapp_paths.src_checkout_dir }}/config/database.js"

- name: Process webapp frontend config templates
  template:
    src: auth.services.ts.j2
    dest: "{{ webapp_paths.src_checkout_dir }}/angular-src/src/app/services/auth.services.ts"

# BUILD and BUNDLE
- name: Build and Bundle Angular code
  shell: npm install && ng build --prod
  args:
    chdir: "{{ webapp_paths.src_checkout_dir }}/angular-src/"

- name: Clean out Angular build files
  file:
    path: "{{ webapp_paths.src_checkout_dir }}/angular-src"
    state: absent

- name: Create webapp runtime dir
  file:
    path: "{{ webapp_paths.meanauthapp_runtime_dir }}"
    state: directory
    mode: 0755

- name: Sync webapp src to runtime dir
  synchronize:
    src: "{{ webapp_paths.src_checkout_dir }}/"
    dest: "{{ webapp_paths.meanauthapp_runtime_dir }}"

  
- name: Build webapp docker image
  docker_image:
    name: "{{ docker_images.webapp }}"
    path: "{{ webapp_paths.meanauthapp_runtime_dir }}"

- name: Create nodejs container and load the webapp
  docker_container:
    name: "{{ docker_hosts.meanauthapp }}"
    image: "{{ docker_images.webapp }}"
    hostname: "{{ docker_hosts.meanauthapp }}"
    networks:
      - name: "{{ docker_network_name }}"
    expose:
      - 3000
    ports:
      - "3000:3000"
    # volumes:
    #   - "{{ webapp_paths.meanauthapp_runtime_dir }}:{{ webapp_paths.meanauthapp_runtime_dir }}"
    # working_dir: "{{ webapp_paths.meanauthapp_runtime_dir }}"

# --------------------------------